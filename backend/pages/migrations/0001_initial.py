# Generated by Django 2.1.7 on 2021-02-13 13:34

import common.rename
import common.validators
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=100)),
                ('author', models.CharField(default='', max_length=100)),
                ('created_at', models.DateField(blank=True, null=True)),
                ('thumbnail', models.ImageField(blank=True, max_length=200,
                                                null=True, upload_to=common.rename.FileUploader('blogs/', 'blogs'))),
                ('is_featured', models.BooleanField(default=False)),
                ('content', tinymce.models.HTMLField()),
            ],
        ),
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(
                    blank=True, default='', max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Blog Categories',
            },
        ),
        migrations.CreateModel(
            name='CampusGroup',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(default='', max_length=300)),
                ('thumbnail', models.ImageField(max_length=200,
                                                null=True, upload_to='campus_groups/')),
                ('website', models.URLField(
                    blank=True, db_index=True, max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='ContactDetails',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('photo', models.ImageField(max_length=200, upload_to='members/')),
                ('facebook', models.URLField(
                    blank=True, db_index=True, max_length=1000)),
                ('linkedin', models.URLField(
                    blank=True, db_index=True, max_length=1000)),
                ('branch', models.CharField(default='', max_length=100)),
                ('year', models.CharField(default='', max_length=100)),
                ('mobile', models.CharField(default='', max_length=100,
                                            validators=[common.validators.validate_mobile])),
                ('email', models.CharField(default='', max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Contact Details',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=150)),
                ('date', models.DateField(blank=True, null=True)),
                ('time', models.TimeField(blank=True, null=True)),
                ('thumbnail', models.ImageField(blank=True, max_length=200, null=True,
                                                upload_to=common.rename.FileUploader('events/', 'events'))),
                ('venue', models.CharField(default='', max_length=100)),
                ('content', tinymce.models.HTMLField()),
            ],
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(default='', max_length=300)),
                ('answer', models.CharField(default='', max_length=1000)),
                ('_for', models.CharField(blank=True, choices=[
                 ('mentor', 'MENTOR'), ('mentee', 'MENTEE')], default='mentor', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Home',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('smp_description', models.TextField(default='', max_length=1000)),
            ],
            options={
                'verbose_name_plural': 'Home',
            },
        ),
        migrations.CreateModel(
            name='HomeVision',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=1000)),
                ('description', models.TextField(default='', max_length=1000)),
                ('image', models.ImageField(blank=True, null=True,
                                            upload_to=common.rename.FileUploader('home/', None))),
            ],
            options={
                'verbose_name_plural': 'Home Vision',
            },
        ),
        migrations.CreateModel(
            name='RaisedQuery',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('query', models.TextField()),
            ],
            options={
                'verbose_name_plural': 'RaisedQueries',
            },
        ),
        migrations.CreateModel(
            name='StudentTeam',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(max_length=200,
                                            upload_to=common.rename.FileUploader('members/', 'student'))),
                ('facebook', models.URLField(
                    blank=True, db_index=True, max_length=1000)),
                ('linkedin', models.URLField(
                    blank=True, db_index=True, max_length=1000)),
                ('year', models.CharField(blank=True, choices=[('1st', '1st Year'), ('2nd', '2nd Year'), (
                    '3rd', '3rd Year'), ('4th', '4th Year'), ('5th', '5th Year')], max_length=100, null=True)),
                ('mobile', models.CharField(blank=True, max_length=10, null=True,
                                            unique=True, validators=[common.validators.validate_mobile])),
            ],
        ),
        migrations.CreateModel(
            name='TeamPosition',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('position_name', models.CharField(default='', max_length=100)),
            ],
        ),
        migrations.AddField(
            model_name='studentteam',
            name='position',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                    related_name='team_position', to='pages.TeamPosition'),
        ),
        migrations.AddField(
            model_name='studentteam',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                    related_name='team_student', to='common.Student'),
        ),
        migrations.AddField(
            model_name='blog',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                    related_name='blog_category', to='pages.BlogCategory'),
        ),
    ]
